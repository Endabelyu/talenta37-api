// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  username   String @unique
  name       String @db.VarChar(100)
  email      String? @unique
  password   Password?
  phone      String?  @unique @db.VarChar(32)
  address    String?  @db.VarChar(255)
  role       String  @default("staff")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  orders Order[]

  @@map("users")
}


model Password {
  id String @id @default(cuid())

  hash String

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  @@map("passwords")

}
model Frame {
  id        String   @id @default(cuid())
  name      String   @unique 
  price     Float?   // Price of the frame
  brand     String?  // Optional brand name for the frame
  description String?  @db.VarChar(255)
  orders    Order[]  // Relation to orders
  stock     Int?     // Optional stock quantity
  @@map("frames")
}

model Lens {
  id        String   @id @default(cuid())
  name      String   @unique
  price     Float?   // Price of the lens
  type      String?  // Optional type of lens (e.g., single vision, progressive)
  material  String?  // Optional lens material (e.g., plastic, glass)

  orders    Order[]  // Relation to orders

  @@map("lenses")
}

model Order {
  id            String   @id @default(cuid())
  user          User     @relation(fields: [userId], references: [id])
  userId        String

  rightEyeSph   Float   // Spherical power for right eye
  rightEyeCyl   Float?   // Cylindrical power for right eye
  rightEyeAxis  Int?     // Axis for right eye
  rightEyeAdd   Float?   // Addition power for right eye

  leftEyeSph    Float   // Spherical power for left eye
  leftEyeCyl    Float?   // Cylindrical power for left eye
  leftEyeAxis   Int?     // Axis for left eye
  leftEyeAdd    Float?   // Addition power for left eye

  frame         Frame?   @relation(fields: [frameId], references: [id])
  frameId       String?  // Foreign key to Frame

  lens          Lens?    @relation(fields: [lensId], references: [id])
  lensId        String?  // Foreign key to Lens

  price          Float?    // Price of the order
  framePrice     Float?    // Price of the frame
  lensPrice      Float?    // Price of the lens
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("orders")
}

